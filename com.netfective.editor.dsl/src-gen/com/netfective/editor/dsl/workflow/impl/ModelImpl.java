/**
 * generated by Xtext 2.9.1
 */
package com.netfective.editor.dsl.workflow.impl;

import com.netfective.editor.dsl.workflow.Cartridges;
import com.netfective.editor.dsl.workflow.Model;
import com.netfective.editor.dsl.workflow.Properties;
import com.netfective.editor.dsl.workflow.Resources;
import com.netfective.editor.dsl.workflow.WorkflowPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link com.netfective.editor.dsl.workflow.impl.ModelImpl#getWFBsp <em>WF Bsp</em>}</li>
 *   <li>{@link com.netfective.editor.dsl.workflow.impl.ModelImpl#getWFProperty <em>WF Property</em>}</li>
 *   <li>{@link com.netfective.editor.dsl.workflow.impl.ModelImpl#getWFResource <em>WF Resource</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getWFBsp() <em>WF Bsp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWFBsp()
   * @generated
   * @ordered
   */
  protected Cartridges wfBsp;

  /**
   * The cached value of the '{@link #getWFProperty() <em>WF Property</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWFProperty()
   * @generated
   * @ordered
   */
  protected Properties wfProperty;

  /**
   * The cached value of the '{@link #getWFResource() <em>WF Resource</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWFResource()
   * @generated
   * @ordered
   */
  protected Resources wfResource;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Cartridges getWFBsp()
  {
    return wfBsp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWFBsp(Cartridges newWFBsp, NotificationChain msgs)
  {
    Cartridges oldWFBsp = wfBsp;
    wfBsp = newWFBsp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WorkflowPackage.MODEL__WF_BSP, oldWFBsp, newWFBsp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWFBsp(Cartridges newWFBsp)
  {
    if (newWFBsp != wfBsp)
    {
      NotificationChain msgs = null;
      if (wfBsp != null)
        msgs = ((InternalEObject)wfBsp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WorkflowPackage.MODEL__WF_BSP, null, msgs);
      if (newWFBsp != null)
        msgs = ((InternalEObject)newWFBsp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WorkflowPackage.MODEL__WF_BSP, null, msgs);
      msgs = basicSetWFBsp(newWFBsp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.MODEL__WF_BSP, newWFBsp, newWFBsp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Properties getWFProperty()
  {
    return wfProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWFProperty(Properties newWFProperty, NotificationChain msgs)
  {
    Properties oldWFProperty = wfProperty;
    wfProperty = newWFProperty;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WorkflowPackage.MODEL__WF_PROPERTY, oldWFProperty, newWFProperty);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWFProperty(Properties newWFProperty)
  {
    if (newWFProperty != wfProperty)
    {
      NotificationChain msgs = null;
      if (wfProperty != null)
        msgs = ((InternalEObject)wfProperty).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WorkflowPackage.MODEL__WF_PROPERTY, null, msgs);
      if (newWFProperty != null)
        msgs = ((InternalEObject)newWFProperty).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WorkflowPackage.MODEL__WF_PROPERTY, null, msgs);
      msgs = basicSetWFProperty(newWFProperty, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.MODEL__WF_PROPERTY, newWFProperty, newWFProperty));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Resources getWFResource()
  {
    return wfResource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWFResource(Resources newWFResource, NotificationChain msgs)
  {
    Resources oldWFResource = wfResource;
    wfResource = newWFResource;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WorkflowPackage.MODEL__WF_RESOURCE, oldWFResource, newWFResource);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWFResource(Resources newWFResource)
  {
    if (newWFResource != wfResource)
    {
      NotificationChain msgs = null;
      if (wfResource != null)
        msgs = ((InternalEObject)wfResource).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WorkflowPackage.MODEL__WF_RESOURCE, null, msgs);
      if (newWFResource != null)
        msgs = ((InternalEObject)newWFResource).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WorkflowPackage.MODEL__WF_RESOURCE, null, msgs);
      msgs = basicSetWFResource(newWFResource, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.MODEL__WF_RESOURCE, newWFResource, newWFResource));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WorkflowPackage.MODEL__WF_BSP:
        return basicSetWFBsp(null, msgs);
      case WorkflowPackage.MODEL__WF_PROPERTY:
        return basicSetWFProperty(null, msgs);
      case WorkflowPackage.MODEL__WF_RESOURCE:
        return basicSetWFResource(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowPackage.MODEL__WF_BSP:
        return getWFBsp();
      case WorkflowPackage.MODEL__WF_PROPERTY:
        return getWFProperty();
      case WorkflowPackage.MODEL__WF_RESOURCE:
        return getWFResource();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowPackage.MODEL__WF_BSP:
        setWFBsp((Cartridges)newValue);
        return;
      case WorkflowPackage.MODEL__WF_PROPERTY:
        setWFProperty((Properties)newValue);
        return;
      case WorkflowPackage.MODEL__WF_RESOURCE:
        setWFResource((Resources)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.MODEL__WF_BSP:
        setWFBsp((Cartridges)null);
        return;
      case WorkflowPackage.MODEL__WF_PROPERTY:
        setWFProperty((Properties)null);
        return;
      case WorkflowPackage.MODEL__WF_RESOURCE:
        setWFResource((Resources)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.MODEL__WF_BSP:
        return wfBsp != null;
      case WorkflowPackage.MODEL__WF_PROPERTY:
        return wfProperty != null;
      case WorkflowPackage.MODEL__WF_RESOURCE:
        return wfResource != null;
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
